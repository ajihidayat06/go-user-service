version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: user-service-postgres
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - user-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: user-service-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - user-service-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service API
  user-service-api:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: api
    container_name: user-service-api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=user_service
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=168h
      - API_PORT=8080
      - GRPC_PORT=9090
      - APP_ENV=development
      - LOG_LEVEL=debug
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - GOOGLE_REDIRECT_URL=http://localhost:8080/auth/google/callback
      - FACEBOOK_CLIENT_ID=your-facebook-client-id
      - FACEBOOK_CLIENT_SECRET=your-facebook-client-secret
      - FACEBOOK_REDIRECT_URL=http://localhost:8080/auth/facebook/callback
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - user-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background Worker
  user-service-worker:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: worker
    container_name: user-service-worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=user_service
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - APP_ENV=development
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - user-service-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  user-service-network:
    driver: bridge